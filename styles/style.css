/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.

*/

.page {
  color: var(--text-color);
  font-family: var(--main-font);
  background-color: var(--bg-color);
  background-image: var(--bg-image);
  background-size: cover;
  background-attachment: fixed;
  min-inline-size: 320px;
  min-block-size: 100dvb;
  font-variation-settings: "wght" var(--main-font-weight);
}

.header {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-height: 327px;
  margin: 100px 0;
  border: 2px solid var(--border-color);
  font-family: var(--accent-font);
  text-transform: uppercase;
  background-color: var(--bg-color);
}

.header__title {
  padding-block-start: clamp(120px, 27%, 136px);
  font-size: clamp(3.0625rem, 2.7104rem + 1.5023vw, 4.0625rem);
}

.header__subtitle {
  padding: 20px 0 25px 0;
  font-size: clamp(0.875rem, 0.6769rem + 0.8451vw, 1.4375rem);
}

.theme-menu {
  padding-block-end: 25px;
}

.theme-menu__list {
  display: flex;
  flex-direction: column;
  gap: 14px;
  padding-inline-start: 18px;
  font-size: 14px;
}

.theme-menu__button {
  position: relative;
  text-transform: uppercase;
}
.theme-menu__button:focus {
  outline: none;
}

.theme-menu__button:disabled {
  color: var(--hover-color);
  transition: color 0.3s ease;
  pointer-events: none;
}

.theme-menu__button:disabled::before {
  content: "▶";
  position: absolute;
  left: -17px;
  color: var(--hover-color);
  animation-name: pointer;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
  animation-duration: 0.5s;
}

.theme-menu__button::after {
  content: "";
  display: block;
  height: 2px;
  background-color: var(--hover-color);
  transition: scale 0.3s;
  transform-origin: 0;
  scale: 0;
}

.theme-menu__button:focus-visible {
  color: var(--hover-color);
  transition: color 0.3s ease;
}

.theme-menu__button:hover {
  color: var(--hover-color);
  transition: color 0.3s ease;
  cursor: pointer;
}

.theme-menu__button:focus-visible::after {
  scale: 1;
}

.content {
  display: flex;
  flex-direction: column;
  gap: 50px;
}

.content__section {
  border: 2px solid var(--border-color);
  font-family: var(--main-font);
  background-color: var(--bg-color);
}

.content__section-header {
  padding: 4px 10px 4px;
  font-size: 18px;
  line-height: 22px;
  font-variation-settings: "wght" var(--header-font-weight);
}

.content__section-block-picture {
  position: relative;
}

.lable {
  position: absolute;
  z-index: 1;
  opacity: 0.5;
  font-family: var(--accent-font);
  font-size: 14px;
  text-transform: uppercase;
  text-shadow: -1px 0 var(--stroke-color), 0 1px var(--stroke-color),
    1px 0 var(--stroke-color), 0 -1px var(--stroke-color);
  inset-block-start: 25px;
  inset-inline-end: 11px;
  mix-blend-mode: hard-light;
}

@supports (
  (text-stroke: 0.5px var(--stroke-color)) or
    (-webkit-text-stroke: 0.5px var(--stroke-color))
) {
  .lable {
    text-shadow: none;
    -webkit-text-stroke: 0.5px var(--stroke-color);
    text-stroke: 0.5px var(--stroke-color);
  }
}

.image {
  display: block;
  width: 100%;
  height: 100%;
  border-block-start: 2px solid var(--border-color);
  border-block-end: 2px solid var(--border-color);
  object-fit: cover;
  object-position: center;
}

.sepia {
  filter: sepia(1);
}

.brightness {
  filter: brightness(30%);
}

.hue-rotate {
  filter: hue-rotate(0.5turn);
}

.saturate {
  filter: saturate(390%);
}

.blur {
  filter: blur(3px);
}

.contrast {
  filter: contrast(250%);
}

.mix {
  filter: invert(1) hue-rotate(90deg);
}

.content__section-block-text {
  padding: 25px;
}

.content__section-paragraph {
  font-size: 18px;
  line-height: 21px;
}

p:not(:last-of-type) {
  margin-block-end: 27px;
}

.content__section-block-buttons {
  display: flex;
  justify-content: end;
  gap: 6px;
  padding-inline-end: 25px;
  padding-block-end: 25px;
}

.button:focus {
  outline: none;
}

.button:focus-visible {
  box-shadow: 2px 2px 0px var(--text-color);
  transition: box-shadow 0.3s ease;
}

.button:hover {
  cursor: pointer;
}

.button::before {
  content: "";
  position: absolute;
  inset: 0;
  background-color: var(--border-color);
  translate: -100% 0%;
}

.button:hover::before {
  animation: butt 0.5s ease-in-out forwards;
}

.button {
  position: relative;
  border: 2px solid var(--border-color);
  overflow: hidden;
  font-family: var(--accent-font);
  font-size: 14px;
  line-height: 90%;
}

.card__icon-button:focus {
  outline: none;
}

.card__icon-button:focus-visible {
  border: 2px solid var(--border-color);
  transition: border 0.3s ease;
}

.card__icon-button {
  border: 2px solid transparent;
  max-block-size: 40px;
}

.card__like-button {
  display: grid;
  place-items: center;
  width: 130px;
  height: 40px;
}

.button__text {
  position: relative;
  z-index: 99;
  display: block;
  color: var(--mix-text-color);
  mix-blend-mode: difference;
}

.like-icon:hover {
  cursor: pointer;
}

.contour {
  transition: fill 0.1s linear;
}

.main-body {
  fill: transparent;
  transition: fill 0.3s linear;
}

.core {
  fill: transparent;
  transition: fill 0.3s 0.03s linear;
}

.sparks {
  opacity: 0;
}

.like-icon:hover .core {
  fill: var(--contur-color);
  transition: fill 0.3s linear;
}

.like-icon:hover .main-body {
  fill: var(--contur-color);
  transition: fill 0.3s 0.05s linear;
}

.like-icon:active .core {
  fill: var(--filling-color);
  transition: fill 0.3s linear;
}

.like-icon:active .main-body {
  fill: var(--filling-color);
  transition: fill 0.3s 0.05s linear;
}

.like-icon.is-liked .core {
  fill: var(--filling-color);
  transition: fill 0.3s linear;
}

.like-icon.is-liked .main-body {
  fill: var(--filling-color);
  transition: fill 0.3s 0.05s linear;
}

.like-icon.is-liked .contour {
  fill: var(--filling-color);
  transition: fill 0.3s 0.06s linear;
}

.like-icon.is-liked .heart {
  transform-origin: center;
  animation: icon-heart 0.3s ease-in 0.1s;
}

.like-icon.is-liked .sparks {
  animation: icon-sparks 0.3s ease-in 0.3s backwards;
}

.section__end {
  display: grid;
  align-self: center;
  padding-block-end: 102px;
  background-color: transparent;
}

.save-button {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 15px 20.5px 15px 19.5px;
  background-color: var(--bg-color);
  background-clip: padding-box;
}

.floppy {
  width: 29px;
  height: 29px;
  color: var(--mix-text-color);
  mix-blend-mode: difference;
}

.dialog-save {
  position: fixed;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 30px;
  max-width: max(24.8vw, 341px);
  height: 192px;
  border: 2px solid var(--border-color);
  padding: 30px;
  background-color: var(--bg-color);
  transition: opacity 0.3s ease-in-out;
}

.dialog-save:not([open]) {
  opacity: 0;
  pointer-events: none;
}

.dialog-save::backdrop {
  background-color: rgb(0 0 0 / 0.75);
}

.block-dialog {
  display: flex;
  align-items: center;
  gap: 20px;
}

.floppy-dialog {
  width: 39px;
  height: 39px;
  color: var(--mix-text-color);
  mix-blend-mode: difference;
}

.header-dialog {
  display: block;
  flex: 1;
  color: var(--mix-text-color);
  font-family: var(--accent-font);
  font-weight: 400;
  font-size: 14px;
  line-height: 140%;
  text-transform: uppercase;
  mix-blend-mode: difference;
}

.button-dialog {
  width: max(20.35vw, 257px);
  height: 38px;
  text-transform: uppercase;
}
